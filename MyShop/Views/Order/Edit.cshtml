@model Store.Logic.ProductStore.Models.ViewModels.OrderViewModel
@{
    ViewBag.Title = (Model != null ? "Edit order" : "Add new order");
    Layout = null;
    @Styles.Render("~/Content/css")
}


@using (Html.BeginForm())
{
    <div class="row">
        <fieldset class="col-md-7 col-md-offset-1 alert-info border-dark">
            <legend> <strong>@ViewBag.Title</strong> </legend>
            <div>
                @Html.HiddenFor(model=>model.Id)
                <div class="row">
                    <div class="col-md-3 ">
                        <strong>@Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "form-control-static col-md-2 text-center" })</strong>
                    </div>
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 ">
                        <strong>@Html.LabelFor(model => model.OrderNumber, htmlAttributes: new { @class = "form-control-static col-md-2 text-center" })</strong>
                    </div>
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.OrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OrderNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 ">
                        <strong>@Html.Label("User", htmlAttributes: new { @class = "form-control-static col-md-2 text-center" })</strong>
                    </div>
                    <div class="col-md-5">
                        @Html.DropDownListFor(model => model.UserId, ViewBag.Users as SelectList)
                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 ">
                        <strong>@Html.Label("Type", htmlAttributes: new { @class = "form-control-static col-md-2 text-center" })</strong>
                    </div>
                    <div class="col-md-5">
                        @Html.DropDownListFor(model => model.OrderTypeId, ViewBag.OrderTypes as SelectList)
                        @Html.ValidationMessageFor(model => model.OrderTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 ">
                        <strong>@Html.LabelFor(model => model.OrderAmount, htmlAttributes: new { @class = "form-control-static col-md-2 text-center" })</strong>
                    </div>
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.OrderAmount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OrderAmount, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div>
                    <strong>Order details</strong>
                    <div id="EditForm">
                        @Html.ActionLink("Add new item", "Edit", null, new { @class = "btn btn-success" })
                    </div>
                    <Table class="table table-striped table-condensed table-bordered">
                        <th>
                            Product code
                        </th>
                        <th>
                            Product name
                        </th>
                        <th>
                            Quantity
                        </th>
                        <th>
                            Price
                        </th>
                        <th align="center">
                            Sum
                        </th>
                        @for (int i = 0; i < Model.OrderDetail.Count; i++)
                        {
                            @Html.HiddenFor(m => m.OrderDetail[i].Id)
                            @Html.HiddenFor(m => m.OrderDetail[i].OrderId)
                            @Html.HiddenFor(m => m.OrderDetail[i].ProductId)
                            <tr>

                                <td>@Html.DisplayFor(m => m.OrderDetail[i].Product.ProductCode)</td>
                                <td>@Html.DisplayFor(m => m.OrderDetail[i].Product.Name)</td>
                                <td>@Html.EditorFor(m => m.OrderDetail[i].OrderQTY)</td>
                                <td>@Html.EditorFor(m => m.OrderDetail[i].ProductPrice)</td>
                                <td>@Html.DisplayFor(m => m.OrderDetail[i].ProductSum)</td>
                            </tr>
                        }


                        @foreach (var item in Model.OrderDetail)
                        {
                            <tr>
                                @*<td> @Html.DisplayFor(modelItem => item.Id)</td>
                <td> @Html.DisplayFor(modelItem => item.ProductId)</td>
                <td> @Html.DisplayFor(modelItem => item.OrderId)</td>
                <td> @Html.DisplayFor(modelItem => item.OrderQTY)</td>
                <td> @Html.DisplayFor(modelItem => item.ProductPrice)</td>
                <td> @Html.DisplayFor(modelItem => item.ProductSum)</td>*@
                                @*<td>@Html.DisplayFor(modelItem => item.Product.ProductCode)</td>
                <td>@Html.DisplayFor(modelItem => item.Product.Name)</td>
                <td> @Html.DisplayFor(modelItem => item.OrderQTY)   </td>
                <td> @Html.DisplayFor(modelItem => item.ProductPrice)  </td>
                <td align="center"> @Html.DisplayFor(modelItem => item.ProductSum) </td>*@
                            </tr>
                        }
                    </Table>
                </div>



                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            <input type="submit" value="Save" class="btn btn-success" />
                            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-info" })
                        </div>
                    </div>
                </div>
</fieldset>

        



    </div>
}
